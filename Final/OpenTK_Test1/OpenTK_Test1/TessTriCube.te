#version 400

layout(triangles, fractional_odd_spacing, ccw) in;
in vec3 tcPos[];
out vec3 tePos;
out vec3 tePatchDistance;

layout (std140) uniform shader_data
{ 
    mat4 viewProjMat;
};

// uniform mat4 viewProjMat;

void main()
{
    vec3 p0 = gl_TessCoord.x * tcPos[0];
    vec3 p1 = gl_TessCoord.y * tcPos[1];
    vec3 p2 = gl_TessCoord.z * tcPos[2];
	
    tePatchDistance = gl_TessCoord;
	
    tePos = normalize(p0 + p1 + p2);
	
    gl_Position = viewProjMat * vec4(tePos, 1.0);

    // if(
    // dot(abs(viewProjMat2[0]), vec4(1.0, 1.0, 1.0, 1.0)) +
    // dot(abs(viewProjMat2[1]), vec4(1.0, 1.0, 1.0, 1.0)) + 
    // dot(abs(viewProjMat2[2]), vec4(1.0, 1.0, 1.0, 1.0)) + 
    // dot(abs(viewProjMat2[3]), vec4(1.0, 1.0, 1.0, 1.0)) == 0.0)
    // gl_Position = vec4(0.0);
}